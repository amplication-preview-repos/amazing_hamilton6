/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Gasto as PrismaGasto } from "@prisma/client";

export class GastoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GastoCountArgs, "select">): Promise<number> {
    return this.prisma.gasto.count(args);
  }

  async gastos<T extends Prisma.GastoFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.GastoFindManyArgs>
  ): Promise<PrismaGasto[]> {
    return this.prisma.gasto.findMany<Prisma.GastoFindManyArgs>(args);
  }
  async gasto<T extends Prisma.GastoFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.GastoFindUniqueArgs>
  ): Promise<PrismaGasto | null> {
    return this.prisma.gasto.findUnique(args);
  }
  async createGasto<T extends Prisma.GastoCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GastoCreateArgs>
  ): Promise<PrismaGasto> {
    return this.prisma.gasto.create<T>(args);
  }
  async updateGasto<T extends Prisma.GastoUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GastoUpdateArgs>
  ): Promise<PrismaGasto> {
    return this.prisma.gasto.update<T>(args);
  }
  async deleteGasto<T extends Prisma.GastoDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.GastoDeleteArgs>
  ): Promise<PrismaGasto> {
    return this.prisma.gasto.delete(args);
  }
}

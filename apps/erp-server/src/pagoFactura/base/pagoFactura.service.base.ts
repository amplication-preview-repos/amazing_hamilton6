/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PagoFactura as PrismaPagoFactura } from "@prisma/client";

export class PagoFacturaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PagoFacturaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pagoFactura.count(args);
  }

  async pagoFacturas<T extends Prisma.PagoFacturaFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PagoFacturaFindManyArgs>
  ): Promise<PrismaPagoFactura[]> {
    return this.prisma.pagoFactura.findMany<Prisma.PagoFacturaFindManyArgs>(
      args
    );
  }
  async pagoFactura<T extends Prisma.PagoFacturaFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PagoFacturaFindUniqueArgs>
  ): Promise<PrismaPagoFactura | null> {
    return this.prisma.pagoFactura.findUnique(args);
  }
  async createPagoFactura<T extends Prisma.PagoFacturaCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PagoFacturaCreateArgs>
  ): Promise<PrismaPagoFactura> {
    return this.prisma.pagoFactura.create<T>(args);
  }
  async updatePagoFactura<T extends Prisma.PagoFacturaUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PagoFacturaUpdateArgs>
  ): Promise<PrismaPagoFactura> {
    return this.prisma.pagoFactura.update<T>(args);
  }
  async deletePagoFactura<T extends Prisma.PagoFacturaDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PagoFacturaDeleteArgs>
  ): Promise<PrismaPagoFactura> {
    return this.prisma.pagoFactura.delete(args);
  }
}
